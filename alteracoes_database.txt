-- Versão SQLite

-- Tabela Projetos
CREATE TABLE Projetos (
    id_projeto INTEGER PRIMARY KEY AUTOINCREMENT,
    nome_projeto TEXT NOT NULL,
    nome_equipe TEXT NOT NULL,
    tlr INTEGER NOT NULL,
    imagem_capa TEXT NOT NULL,
    turma TEXT NOT NULL,
    descricao TEXT NOT NULL,
    cea INTEGER NOT NULL,
    area_atuacao TEXT NOT NULL,
    ativo BOOLEAN DEFAULT 1,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Tabela Eventos
CREATE TABLE Eventos (
    id_evento INTEGER PRIMARY KEY AUTOINCREMENT,
    nome_evento TEXT NOT NULL,
    tipo_evento TEXT CHECK(tipo_evento IN ('interno', 'externo')) NOT NULL
);

-- Tabela de relacionamento entre Evento e Projeto
CREATE TABLE EventoxProjeto (
    id_evento INTEGER NOT NULL,
    id_projeto INTEGER NOT NULL,
    url_votacao TEXT,
    PRIMARY KEY (id_evento, id_projeto),
    FOREIGN KEY (id_evento) REFERENCES Eventos(id_evento),
    FOREIGN KEY (id_projeto) REFERENCES Projetos(id_projeto)
);

-- Tabela de relacionamento entre Evento e Candidato
CREATE TABLE EventoxCandidato (
    id_evento INTEGER NOT NULL,
    id_candidato INTEGER NOT NULL,
    url_votacao TEXT,
    PRIMARY KEY (id_evento, id_candidato),
    FOREIGN KEY (id_evento) REFERENCES Eventos(id_evento),
    FOREIGN KEY (id_candidato) REFERENCES Candidato(id_candidato)
);

-- Tabela ImagensProjeto
CREATE TABLE ImagensProjeto (
    id_imagem INTEGER PRIMARY KEY AUTOINCREMENT,
    projeto_id INTEGER NOT NULL,
    imagem_url TEXT NOT NULL,
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto)
);

-- Tabela IntegrantesEquipe
CREATE TABLE IntegrantesEquipe (
    id_integrante INTEGER PRIMARY KEY AUTOINCREMENT,
    projeto_id INTEGER NOT NULL,
    usuario_id INTEGER NOT NULL,
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (usuario_id) REFERENCES Usuario(id_usuario)
);

-- Tabela ODS
CREATE TABLE ODS (
    id_ods INTEGER PRIMARY KEY AUTOINCREMENT,
    descricao TEXT NOT NULL
);

-- Tabela ProjetoODS
CREATE TABLE ProjetoODS (
    projeto_id INTEGER NOT NULL,
    ods_id INTEGER NOT NULL,
    PRIMARY KEY (projeto_id, ods_id),
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (ods_id) REFERENCES ODS(id_ods)
);

-- Tabela AreaTematica
CREATE TABLE AreaTematica (
    id_area INTEGER PRIMARY KEY AUTOINCREMENT,
    descricao TEXT NOT NULL
);

-- Tabela ProjetoAreaTematica
CREATE TABLE ProjetoAreaTematica (
    projeto_id INTEGER NOT NULL,
    area_tematica_id INTEGER NOT NULL,
    PRIMARY KEY (projeto_id, area_tematica_id),
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (area_tematica_id) REFERENCES AreaTematica(id_area)
);

-- Tabela LinhaExtensao
CREATE TABLE LinhaExtensao (
    id_linha INTEGER PRIMARY KEY AUTOINCREMENT,
    descricao TEXT NOT NULL
);

-- Tabela ProjetoLinhaExtensao
CREATE TABLE ProjetoLinhaExtensao (
    projeto_id INTEGER NOT NULL,
    linha_extensao_id INTEGER NOT NULL,
    PRIMARY KEY (projeto_id, linha_extensao_id),
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (linha_extensao_id) REFERENCES LinhaExtensao(id_linha)
);

-- Tabela Usuario
CREATE TABLE Usuario (
    id_usuario INTEGER PRIMARY KEY AUTOINCREMENT,
    email_institucional TEXT NOT NULL UNIQUE,
    telefone TEXT NOT NULL,
    senha TEXT NOT NULL,
    nome TEXT NOT NULL,
    tipo_usuario TEXT NOT NULL CHECK(tipo_usuario IN ('admin', 'aluno', 'professor')),
    foto TEXT,
    ativo BOOLEAN DEFAULT 1,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP
);

--Tabela Candidato
CREATE TABLE Candidato(
    id_candidato INTEGER PRIMARY KEY AUTOINCREMENT,
    id_usuario INTEGER,
    ra INTEGER UNIQUE,
    turma_atual TEXT,
    deseja_ser_candidato BOOLEAN,
    descricao_campanha TEXT,
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- Tabela Visitantes
CREATE TABLE Visitantes (
    id_visitante INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    telefone TEXT NOT NULL,
    senha TEXT NOT NULL,
    cidade TEXT NOT NULL,
    ativo BOOLEAN DEFAULT 1,
    avaliador_tecnico BOOLEAN DEFAULT 1 
);

-- Inserir Áreas Temáticas
INSERT INTO AreaTematica (descricao) VALUES
('Comunicação'),
('Cultura'),
('Direitos humanos e justiça'),
('Educação'),
('Meio ambiente'),
('Saúde'),
('Tecnologia e Produção');

-- Inserir Linhas de Extensão
INSERT INTO LinhaExtensao (descricao) VALUES
('Alfabetização, leitura e escrita'),
('Artes cênicas'),
('Artes integradas'),
('Artes plásticas'),
('Artes visuais'),
('Comunicação estratégica'),
('Desenvolvimento de produtos'),
('Desenvolvimento regional'),
('Desenvolvimento rural e questão agrária'),
('Desenvolvimento tecnológico'),
('Desenvolvimento urbano'),
('Direitos individuais e coletivos'),
('Educação profissional'),
('Empreendedorismo'),
('Emprego e renda'),
('Endemias e epidemias'),
('Divulgação científica e tecnológica'),
('Esporte e lazer'),
('Estilismo'),
('Fármacos e medicamentos'),
('Formação de professores'),
('Gestão do trabalho'),
('Gestão informacional'),
('Gestão institucional'),
('Gestão pública'),
('Grupos sociais vulneráveis'),
('Infância e adolescência'),
('Inovação tecnológica'),
('Jornalismo'),
('Jovens e adultos'),
('Línguas Estrangeiras'),
('Metodologias e estratégias de ensino/aprendizagem'),
('Mídia-artes'),
('Mídias'),
('Música'),
('Organizações da sociedade civil e movimentos sociais e populares'),
('Patrimônio cultural, histórico e natural'),
('Pessoas com deficiências, incapacidades e necessidades especiais'),
('Propriedade intelectual e patente'),
('Questões ambientais'),
('Recursos hídricos'),
('Resíduos sólidos'),
('Saúde animal'),
('Saúde da família'),
('Saúde e proteção no trabalho'),
('Saúde humana'),
('Segurança alimentar e nutricional'),
('Segurança pública e defesa social'),
('Tecnologia da informação'),
('Terceira Idade'),
('Turismo'),
('Uso de drogas e dependência química'),
('Desenvolvimento humano');

-- Inserir ODS da Agenda 2030 da ONU
INSERT INTO ODS (descricao) VALUES
('ODS 1 - Erradicação da pobreza'),
('ODS 2 - Fome zero e agricultura sustentável'),
('ODS 3 - Saúde e bem-estar'),
('ODS 4 - Educação de qualidade'),
('ODS 5 - Igualdade de gênero'),
('ODS 6 - Água potável e saneamento'),
('ODS 7 - Energia limpa e acessível'),
('ODS 8 - Trabalho decente e crescimento econômico'),
('ODS 9 - Indústria, inovação e infraestrutura'),
('ODS 10 - Redução das desigualdades'),
('ODS 11 - Cidades e comunidades sustentáveis'),
('ODS 12 - Consumo e produção responsáveis'),
('ODS 13 - Ação contra a mudança global do clima'),
('ODS 14 - Vida na água'),
('ODS 15 - Vida terrestre'),
('ODS 16 - Paz, justiça e instituições eficazes'),
('ODS 17 - Parcerias e meios de implementação');



-- Versão POSTGRESQL

-- Tabela Projetos
CREATE TABLE Projetos (
    id_projeto SERIAL PRIMARY KEY,
    nome_projeto TEXT NOT NULL,
    nome_equipe TEXT NOT NULL,
    tlr INTEGER NOT NULL,
    imagem_capa TEXT NOT NULL,
    turma TEXT NOT NULL,
    descricao TEXT NOT NULL,
    cea INTEGER NOT NULL,
    area_atuacao TEXT NOT NULL,
    ativo BOOLEAN DEFAULT TRUE,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP
);




-- Tabela ImagensProjeto
CREATE TABLE ImagensProjeto (
    id_imagem SERIAL PRIMARY KEY,
    projeto_id INTEGER NOT NULL,
    imagem_url TEXT NOT NULL,
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto)
);

-- Tabela Usuario
CREATE TABLE Usuario (
    id_usuario SERIAL PRIMARY KEY,
    email_institucional TEXT NOT NULL UNIQUE,
    telefone TEXT NOT NULL,
    senha TEXT NOT NULL,
    nome TEXT NOT NULL,
    tipo_usuario TEXT NOT NULL CHECK(tipo_usuario IN ('admin', 'aluno', 'professor')),
    foto TEXT,
    ativo BOOLEAN DEFAULT TRUE,
    data_criacao DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Tabela IntegrantesEquipe
CREATE TABLE IntegrantesEquipe (
    id_integrante SERIAL PRIMARY KEY,
    projeto_id INTEGER NOT NULL,
    usuario_id INTEGER NOT NULL,
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (usuario_id) REFERENCES Usuario(id_usuario)
);

-- Tabela ODS
CREATE TABLE ODS (
    id_ods SERIAL PRIMARY KEY,
    descricao TEXT NOT NULL
);

-- Tabela ProjetoODS
CREATE TABLE ProjetoODS (
    projeto_id INTEGER NOT NULL,
    ods_id INTEGER NOT NULL,
    PRIMARY KEY (projeto_id, ods_id),
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (ods_id) REFERENCES ODS(id_ods)
);

-- Tabela AreaTematica
CREATE TABLE AreaTematica (
    id_area SERIAL PRIMARY KEY,
    descricao TEXT NOT NULL
);

-- Tabela ProjetoAreaTematica
CREATE TABLE ProjetoAreaTematica (
    projeto_id INTEGER NOT NULL,
    area_tematica_id INTEGER NOT NULL,
    PRIMARY KEY (projeto_id, area_tematica_id),
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (area_tematica_id) REFERENCES AreaTematica(id_area)
);

-- Tabela LinhaExtensao
CREATE TABLE LinhaExtensao (
    id_linha SERIAL PRIMARY KEY,
    descricao TEXT NOT NULL
);

-- Tabela ProjetoLinhaExtensao
CREATE TABLE ProjetoLinhaExtensao (
    projeto_id INTEGER NOT NULL,
    linha_extensao_id INTEGER NOT NULL,
    PRIMARY KEY (projeto_id, linha_extensao_id),
    FOREIGN KEY (projeto_id) REFERENCES Projetos(id_projeto),
    FOREIGN KEY (linha_extensao_id) REFERENCES LinhaExtensao(id_linha)
);

-- Tabela Candidato
CREATE TABLE Candidato (
    id_candidato SERIAL PRIMARY KEY,
    id_usuario INTEGER,
    ra INTEGER UNIQUE,
    turma_atual TEXT,
    deseja_ser_candidato BOOLEAN,
    descricao_campanha TEXT,
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- Tabela Visitantes
CREATE TABLE Visitantes (
    id_visitante SERIAL PRIMARY KEY,
    nome TEXT NOT NULL,
    telefone TEXT NOT NULL,
    senha TEXT NOT NULL,
    cidade TEXT NOT NULL,
    ativo BOOLEAN DEFAULT TRUE,
    avaliador_tecnico BOOLEAN DEFAULT FALSE
);

-- Inserção de dados iniciais para ODS
INSERT INTO ODS (descricao) VALUES 
('Erradicação da Pobreza'),
('Fome Zero e Agricultura Sustentável'),
('Saúde e Bem-Estar'),
('Educação de Qualidade'),
('Igualdade de Gênero'),
('Água Potável e Saneamento'),
('Energia Limpa e Acessível'),
('Trabalho Decente e Crescimento Econômico'),
('Indústria, Inovação e Infraestrutura'),
('Redução das Desigualdades'),
('Cidades e Comunidades Sustentáveis'),
('Consumo e Produção Responsáveis'),
('Ação Contra a Mudança Global do Clima'),
('Vida na Água'),
('Vida Terrestre'),
('Paz, Justiça e Instituições Eficazes'),
('Parcerias e Meios de Implementação');

-- Inserção de dados iniciais para Linhas de Extensão
INSERT INTO LinhaExtensao (descricao) VALUES 
('Comunicação'),
('Cultura'),
('Direitos Humanos e Justiça'),
('Educação'),
('Meio Ambiente'),
('Saúde'),
('Tecnologia e Produção'),
('Trabalho');

-- Inserção de dados iniciais para Áreas Temáticas
INSERT INTO AreaTematica (descricao) VALUES 
('Tecnologia da Informação'),
('Engenharia'),
('Administração'),
('Saúde'),
('Educação'),
('Meio Ambiente'),
('Cultura'),
('Direitos Humanos');


-- Criar índices para melhorar performance
CREATE INDEX IF NOT EXISTS idx_usuario_email ON Usuario(email_institucional);
CREATE INDEX IF NOT EXISTS idx_candidato_usuario ON Candidato(id_usuario);
CREATE INDEX IF NOT EXISTS idx_projeto_turma ON Projetos(turma);
CREATE INDEX IF NOT EXISTS idx_imagens_projeto ON ImagensProjeto(projeto_id);